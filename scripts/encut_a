#!/bin/bash

################################### Parameter Setting ################################

echo "ENCUT convergence test submission initiated"

# Initialize a variable to hold all job IDs.
job_ids=()

# Define the range of ENCUT values to test.
ENCUT_START=400
ENCUT_END=600
ENCUT_INCREMENT=50

# Number of processors to use with mpirun
NP=36

################################### Create directories and run VASP ################################

# Loop over the specified range of ENCUT values.
for (( ENCUT=$ENCUT_START; ENCUT<=$ENCUT_END; ENCUT+=$ENCUT_INCREMENT ))
do
    # Create a directory for the current ENCUT value.
    mkdir ENCUT_${ENCUT}
    cd ENCUT_${ENCUT}

    # Copy VASP input files from the parent directory.
    cp ../INCAR .
    cp ../POSCAR .
    cp ../POTCAR .
    cp ../KPOINTS .

    # Modify the INCAR file to set the ENCUT value.
    sed -i "/^ENCUT/c\ENCUT = $ENCUT" INCAR

    # Run VASP using mpirun.
    echo "Running VASP in directory: $PWD"
    mpirun -np $NP vasp_std

    # Return to the parent directory.
    cd ..

    # Optionally, store the job ID if using a job scheduler.
    # job_id=$(sbatch job_script.sh | awk '{print $4}')
    # job_ids+=($job_id)
done

echo "ENCUT convergence test submission completed"

# Optionally, you can print all job IDs or perform further operations.
# echo "Submitted jobs: ${job_ids[@]}"


